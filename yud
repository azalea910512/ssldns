#!/bin/bash
# initialisasi var
export DEBIAN_FRONTEND=noninteractive
OS=`uname -m`;
MYIP=$(wget -qO- ipv4.icanhazip.com);
MYIP2="s/xxxxxxxxx/$MYIP/g";
# OpenVPN Ports
OpenVPN_TCP_Port='1103'
OpenVPN_UDP_Port='1194'

# Yahayuk
HAYUK='$MYIP'

# Squid Ports
Squid_Port1='8080'
Squid_Port2='3128'
Squid_Port3='60000'

# OpenVPN Config Download Port
OvpnDownload_Port='85' # Before changing this value, please read this document. It contains all unsafe ports for Google Chrome Browser, please read from line #23 to line #89: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/master/net/base/port_util.cc


# set time GMT +7
ln -fs /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime

apt-get update -y
apt-get upgrade -y
# Removing some firewall tools that may affect other services
apt-get remove --purge ufw firewalld -y

# Installing some important machine essentials
apt-get install nano wget curl zip unzip tar gzip p7zip-full bc rc openssl cron net-tools dnsutils dos2unix screen bzip2 ccrypt -y

# Now installing all our wanted services
apt-get install dropbear stunnel4 ca-certificates nginx ruby apt-transport-https lsb-release squid -y

# Installing all required packages to install Webmin
apt-get install perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl apt-show-versions python dbus libxml-parser-perl -y
apt-get install shared-mime-info jq fail2ban -y

# Installing a text colorizer
gem install lolcat

# Trying to remove obsolette packages after installation
apt-get autoremove -y

# Installing OpenVPN by pulling its repository inside sources.list file
rm -rf /etc/apt/sources.list.d/openvpn*
echo "deb http://build.openvpn.net/debian/openvpn/stable $(lsb_release -sc) main" > /etc/apt/sources.list.d/openvpn.list
wget -qO - http://build.openvpn.net/debian/openvpn/stable/pubkey.gpg|apt-key add -
apt-get update
apt-get install openvpn -y

# Download the webmin .deb package
# You may change its webmin version depends on the link you've loaded in this variable(.deb file only, do not load .zip or .tar.gz file):
 
WebminFile='https://github.com/johndesu090/AutoScriptDB/raw/master/Files/Plugins/webmin_1.920_all.deb'
wget -qO webmin.deb "$WebminFile"
Installing .deb package for webmin
dpkg --install webmin.deb
rm -rf webmin.deb
# Configuring webmin server config to use only http instead of https
sed -i 's|ssl=1|ssl=0|g' /etc/webmin/miniserv.conf

# Then restart to take effect
systemctl restart webmin

mkdir -p /etc/openvpn
 # Creating server.conf, ca.crt, server.crt and server.key
 cat <<'myOpenVPNconf' > /etc/openvpn/server_tcp.conf
# OpenVPN TCP
port OVPNTCP
proto tcp
dev tun
dev-type tun
sndbuf 0
rcvbuf 0
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh2048.pem
tls-auth /etc/openvpn/ta.key 0
crl-verify /etc/openvpn/crl.pem
topology subnet
server 10.9.0.0 255.255.255.0
ifconfig-pool-persist ipp.txt
push "redirect-gateway def1 bypass-dhcp"
push "dhcp-option DNS 8.8.8.8"
push "dhcp-option DNS 8.8.4.4"
keepalive 10 120
cipher AES-256-CBC
auth SHA256
comp-lzo
user nobody
group nogroup
persist-tun
status openvpn-status.log
verb 2
mute 3
verify-client-cert none
username-as-common-name
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
myOpenVPNconf

cat <<'myOpenVPNconf2' > /etc/openvpn/server_udp.conf
# OpenVPN UDP
port OVPNUDP
proto udp
dev tun
ca /etc/openvpn/ca.crt
cert /etc/openvpn/server.crt
key /etc/openvpn/server.key
dh /etc/openvpn/dh2048.pem
crl-verify /etc/openvpn/crl.pem
verify-client-cert none
username-as-common-name
key-direction 0
plugin /etc/openvpn/plugins/openvpn-plugin-auth-pam.so login
server 10.201.0.0 255.255.0.0
ifconfig-pool-persist ipp.txt
push "route-method exe"
push "route-delay 2"
keepalive 10 120
comp-lzo
user nobody
group nogroup
persist-key
persist-tun
status openvpn-status.log
log udp.log
verb 2
ncp-disable
cipher none
auth none
myOpenVPNconf2

 cat <<'EOF7'> /etc/openvpn/ca.crt
-----BEGIN CERTIFICATE-----
MIIDQjCCAiqgAwIBAgIUIPvd5hVP4xqPnOmBBeTmclR6e2AwDQYJKoZIhvcNAQEL
BQAwEzERMA8GA1UEAwwIQ2hhbmdlTWUwHhcNMjEwMjAzMDY1NDE3WhcNMzEwMjAx
MDY1NDE3WjATMREwDwYDVQQDDAhDaGFuZ2VNZTCCASIwDQYJKoZIhvcNAQEBBQAD
ggEPADCCAQoCggEBAORTOfDZr+BHuoRukGBwxNNCKZlAelYN6zBogzuYofsmTBmF
JcwxPWD+gKVMsACTJai91DtlbWOguqQYMh5YPpfxzf4Rgnw7RhDuMoX2wxi3tAPL
hRnx5Rs58zl3I/tn6FyEZWQb1g0z7P4nctKs5xnL6CoqrYY9ynpIAktZpkFgELi8
Iyv8V6lD9cuNaur/6yu1m7A7yNnrQ6Li50MQmz69hrCJ4JKIuJESaggo9FhoTKUQ
3PIlHJ2iZV4SeBzCGOhPix/nc2eb6aeSGhRmfLvgbxyTovvULy2zXjzMdHvJhm/i
IQvGKBug5/ojB35iS2xwySn2b1Thf58usivysw0CAwEAAaOBjTCBijAdBgNVHQ4E
FgQUjrN7oUCP24tse2WV8iQ/tcFPTIgwTgYDVR0jBEcwRYAUjrN7oUCP24tse2WV
8iQ/tcFPTIihF6QVMBMxETAPBgNVBAMMCENoYW5nZU1lghQg+93mFU/jGo+c6YEF
5OZyVHp7YDAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIBBjANBgkqhkiG9w0BAQsF
AAOCAQEAnkwK0Y1Nor/VlDXV58KuP+znU0yS90Bz0qBJ2W3gX7VPd722pNKfdNiE
ckOWw3ulGAyWy/E7W8+1zqWmfoNlNTRKgnk1DTf1H4Y9+BuOOOhqZQ2yODNxl79+
PoDmibfpIHIMq06h5Rcf9KoOySNMmTzzqq0yswDt7TR6bFmZ7I3gC2a5tWwB1umQ
Oid9OWSnrh7s6vdDvJntHydP66Ox+TQAlnxkIxqlzc7IeL9kZW2YKAbntTTYnAZg
N7g8spGPVQKZaNyaQqMnJd1Db9SFmPH8XzLVZ3X0T7T44SREHq9n3NrzEwgFo3Ke
H7EYmhEPHLO0aUfCM5ZVA9cxqE9dqA==
-----END CERTIFICATE-----
EOF7
 cat <<'EOF9'> /etc/openvpn/server.crt
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            5f:d8:89:e8:f1:e0:bd:fc:c5:9e:42:39:75:d2:a3:28
        Signature Algorithm: sha256WithRSAEncryption
        Issuer: CN=ChangeMe
        Validity
            Not Before: Feb  3 06:54:17 2021 GMT
            Not After : Feb  1 06:54:17 2031 GMT
        Subject: CN=server
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                RSA Public-Key: (2048 bit)
                Modulus:
                    00:c4:b1:8e:e0:cb:53:f6:4b:51:ec:ae:56:3a:d3:
                    8c:0a:b1:a7:0a:db:bf:27:43:1c:ee:9a:fb:1f:2a:
                    05:d7:53:26:a9:7a:3b:78:ee:cc:67:cf:be:92:40:
                    4e:4c:c8:01:1f:d1:01:78:d9:24:fe:7c:7f:01:b5:
                    58:d8:bc:4b:f2:ff:85:d0:30:a3:bc:79:c5:f2:49:
                    25:cc:53:11:82:76:9c:ab:08:ff:09:d5:85:9d:ce:
                    4f:0e:d9:b8:c1:8e:14:6c:50:8c:dc:9d:5e:d4:cb:
                    24:74:c4:62:0d:3d:b7:59:f0:4e:b0:ee:1f:42:25:
                    24:2c:22:4c:ba:58:01:f1:7f:26:80:2f:fd:e4:6e:
                    48:96:e0:56:21:63:08:a1:b1:24:ac:58:9f:96:8f:
                    66:0a:3e:e3:55:6d:55:f5:3e:79:46:b3:04:88:2c:
                    99:c9:e0:1b:85:86:34:42:9e:66:5e:15:02:93:57:
                    17:99:e1:46:3e:ac:e6:c8:a5:7e:33:1e:86:1e:5d:
                    77:e4:c7:6d:92:7b:eb:32:50:cc:9e:bc:78:90:36:
                    22:25:b6:a5:cb:2c:6d:d1:1d:07:c8:a6:73:a1:cc:
                    fa:ce:11:07:88:f1:76:74:eb:8c:37:51:81:3f:eb:
                    3d:42:82:e9:0a:6d:71:41:24:84:45:9d:a1:df:bb:
                    61:5d
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Subject Key Identifier: 
                FA:9B:EB:99:5E:9D:C5:85:F4:69:DD:AF:49:26:8E:65:0C:B4:2B:A1
            X509v3 Authority Key Identifier: 
                keyid:8E:B3:7B:A1:40:8F:DB:8B:6C:7B:65:95:F2:24:3F:B5:C1:4F:4C:88
                DirName:/CN=ChangeMe
                serial:20:FB:DD:E6:15:4F:E3:1A:8F:9C:E9:81:05:E4:E6:72:54:7A:7B:60

            X509v3 Extended Key Usage: 
                TLS Web Server Authentication
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment
            X509v3 Subject Alternative Name: 
                DNS:server
    Signature Algorithm: sha256WithRSAEncryption
         73:4f:61:14:79:39:33:ef:fc:58:ef:cb:b2:39:bd:3f:ec:12:
         7f:5e:00:b8:51:d4:3f:15:a4:3a:e6:6c:6a:71:c6:80:48:a1:
         36:c2:c5:05:ff:60:e6:aa:0b:88:8c:13:29:c2:fe:00:a1:33:
         e3:23:93:56:e9:d0:64:87:9e:27:84:d2:3b:3f:d5:de:c7:73:
         d9:cb:3f:9a:b7:bd:e9:3c:8e:9d:60:cf:50:db:cf:5d:e5:35:
         95:a8:ea:9b:02:05:6e:05:4e:d9:d1:4e:9e:9c:a6:e8:d1:12:
         15:59:c3:b7:b1:97:2d:35:61:3d:0e:c8:29:40:95:8f:f7:c0:
         fe:b9:1b:a7:2f:ad:eb:fc:ba:ac:36:86:2e:87:fd:48:3c:96:
         50:f9:db:e0:5a:dc:72:77:6d:3d:12:b4:56:e8:5a:8d:d4:9d:
         29:0b:68:2a:d6:a7:68:93:51:15:da:5f:97:7a:01:67:64:6e:
         cb:7b:44:ba:45:e5:07:f0:b8:ba:61:07:f0:75:6b:ff:fa:04:
         a7:f5:b0:57:3e:17:ad:53:a7:3a:6d:55:7c:ae:03:07:67:cb:
         b1:ad:ef:b2:f9:63:05:15:64:8a:3e:cc:ae:89:0f:18:a3:59:
         41:e9:e4:ee:af:76:0a:38:a5:91:1a:15:41:43:87:4d:e3:6b:
         c0:49:50:0f
-----BEGIN CERTIFICATE-----
MIIDYTCCAkmgAwIBAgIQX9iJ6PHgvfzFnkI5ddKjKDANBgkqhkiG9w0BAQsFADAT
MREwDwYDVQQDDAhDaGFuZ2VNZTAeFw0yMTAyMDMwNjU0MTdaFw0zMTAyMDEwNjU0
MTdaMBExDzANBgNVBAMMBnNlcnZlcjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBAMSxjuDLU/ZLUeyuVjrTjAqxpwrbvydDHO6a+x8qBddTJql6O3juzGfP
vpJATkzIAR/RAXjZJP58fwG1WNi8S/L/hdAwo7x5xfJJJcxTEYJ2nKsI/wnVhZ3O
Tw7ZuMGOFGxQjNydXtTLJHTEYg09t1nwTrDuH0IlJCwiTLpYAfF/JoAv/eRuSJbg
ViFjCKGxJKxYn5aPZgo+41VtVfU+eUazBIgsmcngG4WGNEKeZl4VApNXF5nhRj6s
5silfjMehh5dd+THbZJ76zJQzJ68eJA2IiW2pcssbdEdB8imc6HM+s4RB4jxdnTr
jDdRgT/rPUKC6QptcUEkhEWdod+7YV0CAwEAAaOBsjCBrzAJBgNVHRMEAjAAMB0G
A1UdDgQWBBT6m+uZXp3FhfRp3a9JJo5lDLQroTBOBgNVHSMERzBFgBSOs3uhQI/b
i2x7ZZXyJD+1wU9MiKEXpBUwEzERMA8GA1UEAwwIQ2hhbmdlTWWCFCD73eYVT+Ma
j5zpgQXk5nJUentgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAsGA1UdDwQEAwIFoDAR
BgNVHREECjAIggZzZXJ2ZXIwDQYJKoZIhvcNAQELBQADggEBAHNPYRR5OTPv/Fjv
y7I5vT/sEn9eALhR1D8VpDrmbGpxxoBIoTbCxQX/YOaqC4iMEynC/gChM+Mjk1bp
0GSHnieE0js/1d7Hc9nLP5q3vek8jp1gz1Dbz13lNZWo6psCBW4FTtnRTp6cpujR
EhVZw7exly01YT0OyClAlY/3wP65G6cvrev8uqw2hi6H/Ug8llD52+Ba3HJ3bT0S
tFboWo3UnSkLaCrWp2iTURXaX5d6AWdkbst7RLpF5QfwuLphB/B1a//6BKf1sFc+
F61TpzptVXyuAwdny7Gt77L5YwUVZIo+zK6JDxijWUHp5O6vdgo4pZEaFUFDh03j
a8BJUA8=
-----END CERTIFICATE-----
EOF9
 cat <<'EOF10'> /etc/openvpn/server.key
-----BEGIN PRIVATE KEY-----
MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDEsY7gy1P2S1Hs
rlY604wKsacK278nQxzumvsfKgXXUyapejt47sxnz76SQE5MyAEf0QF42ST+fH8B
tVjYvEvy/4XQMKO8ecXySSXMUxGCdpyrCP8J1YWdzk8O2bjBjhRsUIzcnV7UyyR0
xGINPbdZ8E6w7h9CJSQsIky6WAHxfyaAL/3kbkiW4FYhYwihsSSsWJ+Wj2YKPuNV
bVX1PnlGswSILJnJ4BuFhjRCnmZeFQKTVxeZ4UY+rObIpX4zHoYeXXfkx22Se+sy
UMyevHiQNiIltqXLLG3RHQfIpnOhzPrOEQeI8XZ064w3UYE/6z1CgukKbXFBJIRF
naHfu2FdAgMBAAECggEAENM3a5c4+Wp7+Yj4K1QJOKj1pwIhGdSt1uM+8+1+Tmr4
darVB4U1yvOEU7JYgEzje7s/Kv04IuS3YIgIr5F71a9x3NssRmUMP6tuJko8xzIq
OJ8uYcL4CQWq0ZRiL3xd1t4VDpIPmJg/6BUcZhGPa4wYzx2vYtMWgwf0FESO9f9J
5QrIEc+bbp+4yhmGmLLN2qo1eMneadPRsxvn+GU0UoQtuV/MNcX2Rxanf9m8YR6j
tC9Ia2Wbs0N+i1mU/E/NV2W/7/EOj1rlVF5jcgGlrmV6dnbhrU1bdhgCMuJLPHJD
sr+0xBsWvrf78dEwT+9Q+HUS9MRJDSCbJdN5EHoSAQKBgQDySaDbuTlUasHeObNO
I5nn6xbcdKCUirNBi2kHeFdB469LFYzg2C8UTgHf0xsx3d/gTi6z1SR9a74H5koS
BF40qvUhSpCAWnFEiAeRrHiw9qNNzPBEYAS73LnegRrGvduLBwou2LEwSV0pMhgn
vNU9ugAz236es3rxJGs0DUh5HQKBgQDP01fT3w1CbqV7Yjzk3Bjyhvwpd/8clgCO
kTokdkYTga3FbrfxrhlTVrWfHv5mVAxc3ei0YeqVF0kF2AfuVXCCzlK5KY7yUIsH
3+j55p2p0ve1767m74mRGcQMvlgoytmXu+leZ725QXE41a4n3kA+MkrXEwU08YCl
YEc2NDZVQQKBgEI2aOVjKw2s1ypZ7mxuQkMk9extWuz9Mpu484z9ECuLg34rd4KC
0erknpKCaK4qCmKMOyseFojIBvi1sIxX8T7HcZIVhIPvM4EdA6SF073YySwb05V8
AA8u9QSfl6e0fujxlZDT2yhtBC6b6AoECuqBiEijtWi9d92qrDlfX+zpAoGAWy6s
8CaDGMyXCmV1tivjPjV/WWpuocomgGazjd/eqxxQc7k6N21dazU2BpSApcDmk7BB
MzNqyvMmdMvt3uHZtWp03QygzSwNc+0HuO0365TGXirFIEmkn+cgHz88StmFUo99
uo/lq+xMktUdzhwzL5a9Q1PzCuGSwfxWAjAyToECgYBAbMV/oVviUmBAAKFc1MiY
g0zFNY/ZAaEzevJCDcFWmLvIVfrIiwfdJYpN5RO376NrqRHFjGgyTcZ4oYhTEiwl
eqGo2lBQVin7Oo0vEY/e3vepxyH8UgktY6Hh5kqA42MDuaFN5HXZT7zuJqUsfM3T
aMJrTuUEjxXOFaH+nUYfzw==
-----END PRIVATE KEY-----
EOF10
 cat <<'EOF18'> /etc/openvpn/ta.key
#
# 2048 bit OpenVPN static key
#
-----BEGIN OpenVPN Static key V1-----
303c2da161c3897874d337c9934e526b
7b575bbb9da1b5212ef5addd4a091423
37cc84d3e6b3d11ef9dee297b458dcce
4cf3f2f98efb0562e179fa04cbf8069e
51e62a1c90eac01cbccdec8efdc4f4fa
6503c8914ba35f5b0f7511c5330f1465
6b74076bcb6e70e44923506dd7267235
6e6341e32f419577aae39ba7878269f9
b68cfe229d7cf1350130b37d7b91851c
eed7f267bb6b2545ea2aa5e64fb88437
4a5cc29c11302c40548f725f1707da3d
027b20d4d46569d9688e6b11e04506be
3308ff87a404b3febe60e21776bd12e3
26028013c88d729e3f13b73556bccba3
c74da34ead537c29702f450fad645f6c
4bdd4f449e9e685a7111b54f8915b9ed
-----END OpenVPN Static key V1-----
EOF18
 cat <<'EOF13'> /etc/openvpn/dh2048.pem
-----BEGIN DH PARAMETERS-----
MIIBCAKCAQEAxoNLELO1dQDFW0ZRRbPG9Cv1ifPSqGQB0tIusmTrn22nMqND06fK
NfJNQhnEahwYlbA2DEXxjZ7gpXWA6mrKUIVTFfnFohmHhLgkb9QUc0m5LwVgcd/w
25s+3JEcV3MJ70Cf64wG+KVHMJeISagDlKlE+2f7MJkkSV1vgvfQOpnVp+DF38tL
L57p4njl0n61NNUnbvH0YEPbvKPk0CJ3EGGQE/uhwKIU+pJt/o9S0wppq9sUrOuD
1eelmMZPuWH3aSVIUqiucEsczGn5GfqIc2KNHAMfJ5JhLOjjJvb1cewD2DpIiI2I
bVexIf9WpjXw+LZrjSifNgQ1Eqfdd3tDiwIBAg==
-----END DH PARAMETERS-----
EOF13
 cat <<'EOF16'> /etc/openvpn/crl.pem
-----BEGIN X509 CRL-----
MIIBsDCBmQIBATANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhDaGFuZ2VNZRcN
MjEwMjAzMDY1NDE3WhcNMzEwMjAxMDY1NDE3WqBSMFAwTgYDVR0jBEcwRYAUjrN7
oUCP24tse2WV8iQ/tcFPTIihF6QVMBMxETAPBgNVBAMMCENoYW5nZU1lghQg+93m
FU/jGo+c6YEF5OZyVHp7YDANBgkqhkiG9w0BAQsFAAOCAQEAQirtboHionuqeuzB
28doBSjtcZi4cl5gVj2Q+fdGaCf2yBo8LT4ryUcxT6jI+H0imw4Al+qbHoTkLzf4
rY0yqKAaehcS87Vmj5LjDz7Rjaa92RQaEgJYNpzQSf3Z02LXFifYI0PVSxkge/by
r/Av1i+fb7zyh95kKktvs+e5VpQ1RjrArQGNynT6QplM9glykt+VGTBNY0V21eSZ
HHU2AwxBxjHNV1CWpozRL2AEwAMFxVqU4g2pTU5QouWNV6g0EazaXf70oCYa3qrV
QSRzA6kGZLN5TX1pudGAZh7+RGtwVLBdhYSJuypUfVhZcBQ5DPl2yc+W8REU65m5
RLaI8Q==
-----END X509 CRL-----
EOF16
 # Getting all dns inside resolv.conf then use as Default DNS for our openvpn server
 grep -v '#' /etc/resolv.conf | grep 'nameserver' | grep -E -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | while read -r line; do
	echo "push \"dhcp-option DNS $line\"" >> /etc/openvpn/server_tcp.conf
done

 # Creating a New update message in server.conf
cat <<'NUovpn' > /etc/openvpn/server.conf

 # New Update are now released, OpenVPN Server
 # are now running both TCP and UDP Protocol. (Both are only running on IPv4)
 # But our native server.conf are now removed and divided
 # Into two different configs base on their Protocols:
 #  * OpenVPN TCP (located at /etc/openvpn/server_tcp.conf
 #  * OpenVPN UDP (located at /etc/openvpn/server_udp.conf
 # 
 # Also other logging files like
 # status logs and server logs
 # are moved into new different file names:
 #  * OpenVPN TCP Server logs (/etc/openvpn/tcp.log)
 #  * OpenVPN UDP Server logs (/etc/openvpn/udp.log)
 #  * OpenVPN TCP Status logs (/etc/openvpn/tcp_stats.log)
 #  * OpenVPN UDP Status logs (/etc/openvpn/udp_stats.log)
 #
 # Server ports are configured base on env vars
 # executed/raised from this script (OpenVPN_TCP_Port/OpenVPN_UDP_Port)
 #
 # Enjoy the new update
 # Script Updated by SL
NUovpn

 # setting openvpn server port
sed -i "s|OVPNTCP|$OpenVPN_TCP_Port|g" /etc/openvpn/server_tcp.conf
sed -i "s|OVPNUDP|$OpenVPN_UDP_Port|g" /etc/openvpn/server_udp.conf
 
 
# Getting some OpenVPN plugins for unix authentication
cd
wget https://github.com/johndesu090/AutoScriptDB/raw/master/Files/Plugins/plugin.tgz
tar -xzvf /root/plugin.tgz -C /etc/openvpn/
rm -f plugin.tgz
#
systemctl start openvpn@server_tcp
systemctl enable openvpn@server_tcp
systemctl start openvpn@server_udp
systemctl enable openvpn@server_udp
sysctl -w net.ipv4.ip_forward=1
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
iptables -t nat -I POSTROUTING -s 10.200.0.0/16 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 10.201.0.0/16 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -s 192.168.100.0/24 -o eth0 -j MASQUERADE
iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
iptables-save > /etc/iptables.up.rules
wget -O /etc/network/if-up.d/iptables "https://raw.githubusercontent.com/fisabiliyusri/Betatest/master/debian9/iptables"
chmod +x /etc/network/if-up.d/iptables
sed -i 's|LimitNPROC|#LimitNPROC|g' /lib/systemd/system/openvpn@.service
systemctl daemon-reload
/etc/init.d/openvpn restart

# Removing Duplicate Squid config
rm -rf /etc/squid/squid.con*

# Creating Squid server config using cat eof tricks
cat <<'mySquid' > /etc/squid/squid.conf
# My Squid Proxy Server Config
acl localhost src 127.0.0.1/32 ::1
acl to_localhost dst 127.0.0.0/8 0.0.0.0/32 ::1
acl VPN dst xxxxxxxxx/32
acl SSH dst xxxxxxxxx/32
# Izinkan Port SSL
acl SSL_ports port 1-62100
acl SSL_ports port 443
acl SSL_ports port 222
acl SSL_ports port 43
acl SSL_ports port 69
acl SSL_ports port 600
acl SSL_ports port 700
acl SSL_ports port 800
acl SSL_ports port 900
acl SSL_ports port 444
acl SSL_ports port 777
acl SSL_ports port 540
acl SSL_ports port 551
acl SSL_ports port 9900
acl SSL_ports port 569
acl SSL_ports port 8181
acl SSL_ports port 3129
# Izinkan port ssh vpn
acl Safe_ports port 1-62100
acl Safe_ports port 569
acl Safe_ports port 1945
acl Safe_ports port 22
acl Safe_ports port 143
acl Safe_ports port 200
acl Safe_ports port 400
acl Safe_ports port 8000
acl Safe_ports port 1078
acl Safe_ports port 450
acl Safe_ports port 77
acl Safe_ports port 550
acl Safe_ports port 9000
acl Safe_ports port 80
acl CONNECT method CONNECT
http_access allow VPN
http_access allow SSH
http_access allow localhost
http_access deny all 
http_port 0.0.0.0:Squid_Port1
http_port 0.0.0.0:Squid_Port2
http_port 0.0.0.0:Squid_Port3
### Allow Headers
request_header_access Allow allow all 
request_header_access Authorization allow all 
request_header_access WWW-Authenticate allow all 
request_header_access Proxy-Authorization allow all 
request_header_access Proxy-Authenticate allow all 
request_header_access Cache-Control allow all 
request_header_access Content-Encoding allow all 
request_header_access Content-Length allow all 
request_header_access Content-Type allow all 
request_header_access Date allow all 
request_header_access Expires allow all 
request_header_access Host allow all 
request_header_access If-Modified-Since allow all 
request_header_access Last-Modified allow all 
request_header_access Location allow all 
request_header_access Pragma allow all 
request_header_access Accept allow all 
request_header_access Accept-Charset allow all 
request_header_access Accept-Encoding allow all 
request_header_access Accept-Language allow all 
request_header_access Content-Language allow all 
request_header_access Mime-Version allow all 
request_header_access Retry-After allow all 
request_header_access Title allow all 
request_header_access Connection allow all 
request_header_access Proxy-Connection allow all 
request_header_access User-Agent allow all 
request_header_access Cookie allow all 
request_header_access All deny all
### HTTP Anonymizer Paranoid
reply_header_access Allow allow all 
reply_header_access Authorization allow all 
reply_header_access WWW-Authenticate allow all 
reply_header_access Proxy-Authorization allow all 
reply_header_access Proxy-Authenticate allow all 
reply_header_access Cache-Control allow all 
reply_header_access Content-Encoding allow all 
reply_header_access Content-Length allow all 
reply_header_access Content-Type allow all 
reply_header_access Date allow all 
reply_header_access Expires allow all 
reply_header_access Host allow all 
reply_header_access If-Modified-Since allow all 
reply_header_access Last-Modified allow all 
reply_header_access Location allow all 
reply_header_access Pragma allow all 
reply_header_access Accept allow all 
reply_header_access Accept-Charset allow all 
reply_header_access Accept-Encoding allow all 
reply_header_access Accept-Language allow all 
reply_header_access Content-Language allow all 
reply_header_access Mime-Version allow all 
reply_header_access Retry-After allow all 
reply_header_access Title allow all 
reply_header_access Connection allow all 
reply_header_access Proxy-Connection allow all 
reply_header_access User-Agent allow all 
reply_header_access Cookie allow all 
reply_header_access All deny all
### CoreDump
coredump_dir /var/spool/squid
dns_nameservers 8.8.8.8 8.8.4.4
refresh_pattern ^ftp: 1440 20% 10080
refresh_pattern ^gopher: 1440 0% 1440
refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
refresh_pattern . 0 20% 4320
visible_hostname SulaimanL
mySquid

# setting
MYIP=$(wget -qO- ipv4.icanhazip.com);
MYIP2="s|xxxxxxxxx|$MYIP|g";
sed -i "s|xxxxxxxxx|$MYIP|g" /etc/squid/squid.conf

# Setting machine's IP Address inside of our Squid config(security that only allows this machine to use this proxy server)
sed -i "s|IP-ADDRESS|$IPADDR|g" /etc/squid/squid.conf
# Setting squid ports
sed -i "s|Squid_Port1|$Squid_Port1|g" /etc/squid/squid.conf
sed -i "s|Squid_Port2|$Squid_Port2|g" /etc/squid/squid.conf
sed -i "s|Squid_Port3|$Squid_Port3|g" /etc/squid/squid.conf

# Starting Proxy server
echo -e "Restarting proxy server..."
systemctl restart squid

# Creating nginx config for our ovpn config downloads webserver
cat <<'myNginxC' > /etc/nginx/conf.d/sl-ovpn-config.conf
# My OpenVPN Config Download Directory
server {
 listen 0.0.0.0:myNginx;
 server_name localhost;
 root /var/www/openvpn;
 index index.html;
}
myNginxC

# Setting our nginx config port for .ovpn download site
sed -i "s|myNginx|$OvpnDownload_Port|g" /etc/nginx/conf.d/sl-ovpn-config.conf

# Removing Default nginx page(port 80)
rm -rf /etc/nginx/sites-*

# Creating our root directory for all of our .ovpn configs
rm -rf /var/www/openvpn
mkdir -p /var/www/openvpn

#  Buat Config OpenVPN 

cat <<EOF15> /var/www/openvpn/tcp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote $MYIP $OpenVPN_TCP_Port
http-proxy $MYIP $Squid_Port2
http-proxy-retry
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 0
rcvbuf 0
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
EOF15

cat <<EOF16> /var/www/openvpn/sun-tutcp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy 2"
remote $MYIP $OpenVPN_TCP_Port
remote-cert-tls server
connect-retry infinite
resolv-retry infinite
nobind
persist-key
persist-tun
auth none
auth-nocache
cipher none
comp-lzo
redirect-gateway def1
setenv CLIENT_CERT 0
reneg-sec 0
verb 1
http-proxy $IPADDR $Squid_Port2
http-proxy-retry
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
EOF16

cat <<EOF162> /var/www/openvpn/udp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto udp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN UDP"
remote $MYIP $OpenVPN_UDP_Port
remote-cert-tls server
resolv-retry infinite
float
fast-io
nobind
persist-key
persist-remote-ip
persist-tun
auth-user-pass
auth none
auth-nocache
cipher none
comp-lzo
redirect-gateway def1
setenv CLIENT_CERT 0
reneg-sec 0
verb 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF162

cat <<EOF17> /var/www/openvpn/ssl.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client 
dev tun
proto tcp
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote 127.0.0.1 $OpenVPN_TCP_Port
route $MYIP 255.255.255.255 net_gateway
resolv-retry infinite
route-method exe
nobind
persist-key
persist-tun
comp-lzo
cipher AES-256-CBC
auth SHA256
push "redirect-gateway def1 bypass-dhcp"
verb 3
push-peer-info
ping 10
ping-restart 60
hand-window 70
server-poll-timeout 4
reneg-sec 2592000
sndbuf 0
rcvbuf 0
remote-cert-tls server
key-direction 1
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
<tls-auth>
$(cat /etc/openvpn/ta.key)
</tls-auth>
EOF17

cat <<EOF152> /var/www/openvpn/gtmwnp.ovpn
# Mac Quan Inc
# Thanks for using this script, Enjoy Highspeed OpenVPN Service
client
dev tun
proto tcp-client
setenv FRIENDLY_NAME "Mac Quan Inc - VPN Proxy"
remote $MYIP $OpenVPN_TCP_Port
nobind
persist-key
persist-tun
comp-lzo
keepalive 10 120
tls-client
remote-cert-tls server
verb 2
auth-user-pass
cipher none
auth none
auth-nocache
auth-retry interact
connect-retry 0 1
nice -20
reneg-sec 0
redirect-gateway def1
setenv CLIENT_CERT 0
dhcp-option DNS 1.1.1.1
dhcp-option DNS 1.0.0.1
http-proxy $IPADDR $Squid_Port2
http-proxy-retry
<auth-user-pass>
sam
sam
</auth-user-pass>
<ca>
$(cat /etc/openvpn/ca.crt)
</ca>
<cert>
$(cat /etc/openvpn/server.crt)
</cert>
<key>
$(cat /etc/openvpn/server.key)
</key>
EOF152

# Setting UFW
apt-get install ufw
ufw allow ssh
ufw allow 1103/tcp
sed -i 's|DEFAULT_INPUT_POLICY="DROP"|DEFAULT_INPUT_POLICY="ACCEPT"|' /etc/default/ufw
sed -i 's|DEFAULT_FORWARD_POLICY="DROP"|DEFAULT_FORWARD_POLICY="ACCEPT"|' /etc/default/ufw
cat > /etc/ufw/before.rules <<-END
# START OPENVPN RULES
# NAT table rules
*nat
:POSTROUTING ACCEPT [0:0]
# Allow traffic from OpenVPN client to eth0
-A POSTROUTING -s 10.8.0.0/8 -o eth0 -j MASQUERADE
COMMIT
# END OPENVPN RULES
END
ufw status
ufw disable

# install badvpn
cd
#apt-get install cmake -y
#apt-get install screen wget gcc build-essential g++ make -y
#wget https://github.com/trngkn/badvpn/raw/main/badvpn-1.999.130.tar.gz
#tar xf badvpn-1.999.130.tar.gz
#cd badvpn-1.999.130/
#cmake /home/pi/badvpn-1.999.130 -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1
#make install
#echo "Thiet lap BADVPN tai cong 7300"
#badvpn-udpgw --listen-addr 127.0.0.1:7300 > /dev/null &
#rm /root/badupd
#echo "Thanh Cong!!"
#echo "Yahhh"
#install badvpn deb/ubun
apt-get install cmake make gcc -y
cd
wget https://github.com/ambrop72/badvpn/archive/1.999.130.tar.gz
tar xzf 1.999.130.tar.gz
mkdir badvpn-build
cd badvpn-build
cmake ~/badvpn-1.999.130 -DBUILD_NOTHING_BY_DEFAULT=1 -DBUILD_UDPGW=1
make install
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7000 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7100 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7200 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7400 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7500 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7600 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7700 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7800 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
sed -i '$ i\screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7900 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &' /etc/rc.local
chmod +x /usr/local/bin/badvpn-udpgw
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7000 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7100 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7200 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7300 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7400 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7500 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7600 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7700 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7800 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &
screen -AmdS badvpn badvpn-udpgw --listen-addr 127.0.0.1:7900 --max-clients 1000 --max-connections-for-client 1000 > /dev/null &

# setting port ssh
sed -i '/#Port 22/a Port 143' /etc/ssh/sshd_config
sed -i '/#Port 22/a Port  90' /etc/ssh/sshd_config
sed -i 's/#Port 22/Port  22/g' /etc/ssh/sshd_config
/etc/init.d/ssh restart

# install dropbear
apt-get -y install dropbear
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=442/g' /etc/default/dropbear
sed -i 's/DROPBEAR_EXTRA_ARGS=/DROPBEAR_EXTRA_ARGS="-p 109 -p 110 -p 80"/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
/etc/init.d/dropbear restart

# install stunnel
apt-get install stunnel4 -y
cat > /etc/stunnel/stunnel.conf <<-END
cert = /etc/stunnel/stunnel.pem
client = no
socket = a:SO_REUSEADDR=1
socket = l:TCP_NODELAY=1
socket = r:TCP_NODELAY=1

[dropbear]
accept = 443
connect = 127.0.0.1:442

[openvpn]
accept = 990
connect = 127.0.0.1:1103

END

# make a certificate
openssl genrsa -out key.pem 2048
openssl req -new -x509 -key key.pem -out cert.pem -days 1095 \
-subj "/C=$country/ST=$state/L=$locality/O=$organization/OU=$organizationalunit/CN=$commonname/emailAddress=$email"
cat key.pem cert.pem >> /etc/stunnel/stunnel.pem

# configure stunnel
sed -i 's/ENABLED=0/ENABLED=1/g' /etc/default/stunnel4
cd /etc/stunnel/
wget -O /etc/stunnel/ssl.conf "https://raw.githubusercontent.com/azalea910512/kia/main/ssl/ssl.conf"
sed -i $MYIP2 /etc/stunnel/ssl.conf;
cp ssl.conf /home/vps/public_html/
cd

# hapus
rm -rf /etc/nginx/conf.d/vps.conf

HAYUK='$MYIP'
# Creating OVPN download site index.html
cat <<'mySiteOvpn' > /var/www/openvpn/index.html
<!DOCTYPE html>
<html lang="en">

<!-- Simple OVPN Download site by SulaimanL -->

<head><meta charset="utf-8" /><title>SLSSH Config Download</title><meta name="description" content="MyScriptName Server" /><meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport" /><meta name="theme-color" content="#000000" /><link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.2/css/all.css"><link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.8.3/css/mdb.min.css" rel="stylesheet"></head><body><div class="container justify-content-center" style="margin-top:9em;margin-bottom:5em;"><div class="col-md"><div class="view"><img src="https://openvpn.net/wp-content/uploads/openvpn.jpg" class="card-img-top"><div class="mask rgba-white-slight"></div></div><div class="card"><div class="card-body"><h5 class="card-title">Config List</h5><br /><ul class="list-group"><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>Download Semua Config Yang Tersedia(TCP,UDP,SSL)(HTTP Injector dan OpenVPN)<span class="badge light-blue darken-4">Android/iOS/PC</span><br /><small>Mod By Sulaiman L</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/configs.zip" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>Config HTTP Injector Untuk Kuota Maxstream <span class="badge light-blue darken-4">Android/iOS/PC</span><br /><small> Mod By Sulaiman L</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/SL-Maxstream.ehi" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>Config HTTP Injector Untuk Kuota Youtube Telkomsel<span class="badge light-blue darken-4">Android/iOS/PC</span><br /><small> Config HTTP Injector</small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/SL-YoutubeTsel.ehi" style="float:right;"><i class="fa fa-download"></i> Download</a></li><li class="list-group-item justify-content-between align-items-center" style="margin-bottom:1em;"><p>OpenVPN TCP Untuk Kuota Unlimax/Unliapps) <span class="badge light-blue darken-4">Android/PC</span><br /><small>untuk mode ssl pake port 569 dan pake aplikasi HTTP Custom yang di Play Store,SSL wajib di centang jika pake yg SSL dan mode SSL harus hapus http-proxy kalo pake openvpn </small></p><a class="btn btn-outline-success waves-effect btn-sm" href="http://HAYUK:NGINXPORT/beta.ovpn" style="float:right;"><i class="fa fa-download"></i> Download</a></li></ul></div></div></div></div></body></html>
mySiteOvpn
 
 # Setting template's correct name,IP address and nginx Port
sed -i "s|NGINXPORT|$OvpnDownload_Port|g" /var/www/openvpn/index.html
sed -i "s|HAYUK|$MYIP|g" /var/www/openvpn/index.html


# Restarting nginx service
systemctl restart nginx
 
  # Running screenfetch
# download script
cd
# cron job
apt-get install cron
wget https://raw.githubusercontent.com/demonk1992/membagongkan/main/crontab
mv crontab /etc/
chmod 644 /etc/crontab

# Install Screenfetch
apt-get -y install lsb-release scrot
wget -O screenfetch "https://raw.githubusercontent.com/Dreyannz/AutoScriptVPS/master/Files/Others/screenfetch"
chmod +x screenfetch

# Download Commands
cd /usr/bin
wget https://github.com/Dreyannz/AutoScriptVPS/raw/master/Files/Menu/AutoScript_Menu.tar.gz
tar -xzvf AutoScript_Menu.tar.gz
rm AutoScript_Menu.tar.gz
sed -i -e 's/\r$//' accounts
sed -i -e 's/\r$//' bench-network
sed -i -e 's/\r$//' clearcache
sed -i -e 's/\r$//' connections
sed -i -e 's/\r$//' create
sed -i -e 's/\r$//' create_random
sed -i -e 's/\r$//' create_trial
sed -i -e 's/\r$//' delete_expired
sed -i -e 's/\r$//' diagnose
sed -i -e 's/\r$//' edit_dropbear
sed -i -e 's/\r$//' edit_openssh
sed -i -e 's/\r$//' edit_openvpn
sed -i -e 's/\r$//' edit_ports
sed -i -e 's/\r$//' edit_squid3
sed -i -e 's/\r$//' edit_stunnel4
sed -i -e 's/\r$//' locked_list
sed -i -e 's/\r$//' menu
sed -i -e 's/\r$//' options
sed -i -e 's/\r$//' ram
sed -i -e 's/\r$//' reboot_sys
sed -i -e 's/\r$//' reboot_sys_auto
sed -i -e 's/\r$//' restart_services
sed -i -e 's/\r$//' server
sed -i -e 's/\r$//' set_multilogin_autokill
sed -i -e 's/\r$//' set_multilogin_autokill_lib
sed -i -e 's/\r$//' show_ports
sed -i -e 's/\r$//' speedtest
sed -i -e 's/\r$//' user_delete
sed -i -e 's/\r$//' user_details
sed -i -e 's/\r$//' user_details_lib
sed -i -e 's/\r$//' user_extend
sed -i -e 's/\r$//' user_list
sed -i -e 's/\r$//' user_lock
sed -i -e 's/\r$//' user_unlock

# AutoReboot Tools
echo "10 0 * * * root /usr/local/bin/reboot_sys" > /etc/cron.d/reboot_sys
echo "0 1 * * * root delete_expired" > /etc/cron.d/delete_expired
echo "*0 */2 * * * root clearcache" > /etc/cron.d/clearcache

# Set Permissions
cd /usr/bin
chmod +x create
chmod +x accounts
chmod +x create
chmod +x create_random
chmod +x create_trial
chmod +x user_list
chmod +x user_details
chmod +x user_details_lib
chmod +x user_extend
chmod +x user_delete
chmod +x user_lock
chmod +x user_unlock
chmod +x connections
chmod +x delete_expired
chmod +x locked_list
chmod +x options
chmod +x set_multilogin_autokill
chmod +x set_multilogin_autokill_lib
chmod +x restart_services
chmod +x edit_ports
chmod +x show_ports
chmod +x edit_openssh
chmod +x edit_dropbear
chmod +x edit_stunnel4
chmod +x edit_openvpn
chmod +x edit_squid3
chmod +x reboot_sys
chmod +x reboot_sys_auto
chmod +x clearcache
chmod +x server
chmod +x ram
chmod +x diagnose
chmod +x bench-network
chmod +x speedtest

 
 # Showing script's banner message

# zip
cd
cd /var/www/openvpn
zip -qq -r configs.zip
cd
# remove unnecessary files
apt -y autoremove
apt -y autoclean
apt -y clean

# grep ports 
opensshport="$(netstat -ntlp | grep -i ssh | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
dropbearport="$(netstat -nlpt | grep -i dropbear | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
stunnel4port="$(netstat -nlpt | grep -i stunnel | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
openvpnport="$(netstat -nlpt | grep -i openvpn | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
squidport="$(cat /etc/squid3/squid.conf | grep -i http_port | awk '{print $2}')"
nginxport="$(netstat -nlpt | grep -i nginx| grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"

# Info
clear
echo -e ""
echo -e "\e[94m[][][]======================================[][][]"
echo -e "\e[0m                                                   "
echo -e "\e[94m           AutoScriptVPS by  _Dreyannz_           "
echo -e "\e[94m                                                  "
echo -e "\e[94m                    Services                      "
echo -e "\e[94m                                                  "
echo -e "\e[94m    OpenSSH        :   "$opensshport
echo -e "\e[94m    Dropbear       :   "$dropbearport
echo -e "\e[94m    SSL            :   "$stunnel4port
echo -e "\e[94m    OpenVPN        :   "$openvpnport
echo -e "\e[94m    Port Squid     :   "$squidport
echo -e "\e[94m    Nginx          :   "$nginxport
echo -e "\e[94m                                                  "
echo -e "\e[94m              Other Features Included             "
echo -e "\e[94m                                                  "
echo -e "\e[94m    Timezone       :   Asia/Manila (GMT +7)       "
echo -e "\e[94m    Webmin         :   http://$MYIP:10000/        "
echo -e "\e[94m    IPV6           :   [OFF]                      "
echo -e "\e[94m    Cron Scheduler :   [ON]                       "
echo -e "\e[94m    Fail2Ban       :   [ON]                       "
echo -e "\e[94m    DDOS Deflate   :   [ON]                       "
echo -e "\e[94m    LibXML Parser  :   {ON]                       "
echo -e "\e[0m                                                   "
echo -e "\e[94m[][][]======================================[][][]\e[0m"
echo -e "\e[0m                                                   "
read -n1 -r -p "          Press Any Key To Show Commands          "
menu
cd

}
function ip_address(){
  local IP="$( ip addr | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | egrep -v "^192\.168|^172\.1[6-9]\.|^172\.2[0-9]\.|^172\.3[0-2]\.|^10\.|^127\.|^255\.|^0\." | head -n 1 )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipv4.icanhazip.com )"
  [ -z "${IP}" ] && IP="$( wget -qO- -t1 -T2 ipinfo.io/ip )"
  [ ! -z "${IP}" ] && echo "${IP}" || echo
} 
